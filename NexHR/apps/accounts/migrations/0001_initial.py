# Generated by Django 5.1 on 2024-08-10 08:07

import base.models.base
import django.db.models.deletion
import phonenumber_field.modelfields
import ulid.api.api
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('internal_id', base.models.base.ULIDField(default=ulid.api.api.Api.new, editable=False, help_text='Unique identifier for the user.', max_length=26, verbose_name='Internal ID')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the user is active.', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the user was created.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the user was last updated.', null=True, verbose_name='Updated At')),
                ('email', models.EmailField(help_text="The user's email address, used for authentication.", max_length=254, unique=True, verbose_name='Email Address')),
                ('secondary_email', models.EmailField(blank=True, help_text="The user's secondary email address.", max_length=254, null=True, verbose_name='Secondary Email Address')),
                ('first_name', models.CharField(help_text="The user's first name.", max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(help_text="The user's last name.", max_length=30, verbose_name='Last Name')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], help_text="The user's gender.", max_length=10, null=True, verbose_name='Gender')),
                ('date_of_birth', models.DateField(blank=True, help_text="The user's date of birth.", null=True, verbose_name='Date of Birth')),
                ('joining_date', models.DateField(blank=True, help_text='The date on which the user joined the organization.', null=True, verbose_name='Joining Date')),
                ('employee_id', models.CharField(blank=True, help_text="The user's employee ID.", max_length=20, null=True, verbose_name='Employee ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text="The user's phone number, including country code.", max_length=128, null=True, region=None, verbose_name='Phone Number')),
                ('address_1', models.CharField(blank=True, help_text="The first line of the user's address.", max_length=100, null=True, verbose_name='Address 1')),
                ('address_2', models.CharField(blank=True, help_text="The second line of the user's address.", max_length=100, null=True, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, help_text="The user's city.", max_length=100, null=True, verbose_name='City')),
                ('zip_code', models.CharField(blank=True, help_text="The user's zip code.", max_length=20, null=True, verbose_name='Zip Code')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff Status')),
                ('country', models.ForeignKey(help_text="The user's country.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='base.modelcountry', verbose_name='Country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('state', models.ForeignKey(help_text="The user's state.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='base.modelstate', verbose_name='State')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
            },
        ),
    ]
